name: Fix Release

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: "Release version to patch"

jobs:
  fix:
    runs-on: ubuntu-latest
    env:
      REGISTRY: cr.yandex/${{ secrets.YA_REGISTRY_ID }}/app
      VERSION: ${{ github.event.inputs.version }}
      FIX_NUMBER: ${{ github.run_number }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '22'

      - run: npm ci

      - name: Run linter and tests
        run: |
          npm run lint
          npm run test
          npm run build

      - name: Build and push Docker image
        run: |
          FIX_TAG=${VERSION}_fix${FIX_NUMBER}
          docker build -t $REGISTRY:$FIX_TAG -t $REGISTRY:${VERSION}_latest .
          echo ${{ secrets.YA_OAUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex
          docker push $REGISTRY:$FIX_TAG
          docker push $REGISTRY:${VERSION}_latest

      - name: Tag the release fix in Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag v${VERSION}-fix${FIX_NUMBER}
          git push origin v${VERSION}-fix${FIX_NUMBER}

      - name: Generate commit log
        id: commits
        run: |
          # Find the previous release tag (either fix or main release)
          PREV_TAG=$(git tag --sort=-creatordate | grep -E "^v${VERSION}(-fix[0-9]+)?$" | sed -n 2p)
          if [ -z "$PREV_TAG" ]; then
            PREV_TAG=$(git tag --sort=-creatordate | grep "^v" | head -n 1)
          fi
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV
          echo "::set-output name=log::$(git log --pretty=format:'- %s (%an)' $PREV_TAG..HEAD)"

      - name: Add comment to GitHub Issue
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ env.VERSION }}
          body: |
            ### üîß Fix Release v${{ env.VERSION }}-fix${{ env.FIX_NUMBER }}
            **–î–∞—Ç–∞:** ${{ steps.date.outputs.date }}
            **–ê–≤—Ç–æ—Ä:** @${{ github.actor }}
            **Docker-–æ–±—Ä–∞–∑:** `${{ env.REGISTRY }}:${{ env.VERSION }}_fix${{ env.FIX_NUMBER }}`

            **–ö–æ–º–º–∏—Ç—ã:**
            ${{ steps.commits.outputs.log }}

      - name: Set date
        id: date
        run: echo "::set-output name=date::$(date -u '+%Y-%m-%d %H:%M:%S UTC')"
